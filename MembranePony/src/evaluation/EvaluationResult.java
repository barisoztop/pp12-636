package evaluation;

public class EvaluationResult {
	
	/**
	 * the individual runs of the tenfold crossvalidation
	 */
	public final EvaluationRun[] evaluationRuns;

	
	public EvaluationResult(EvaluationRun[] evaluationRuns) {
		this.evaluationRuns = evaluationRuns;
	}
	
	
	
	/**
	 * use the {@link Statistics} object generated by this method to calculate recall, precision, specificity
	 * with regard to class "inside".
	 * @return
	 */
	public Statistics getRunStatisticsInside() {
		Statistics s = new Statistics();
		
		for(EvaluationRun run : evaluationRuns)
			for(TestCase t : run.getTestCases())
				s.addStatistics(t.inside);
		
		return s;
	}
	
	/**
	 * use the {@link Statistics} object generated by this method to calculate recall, precision, specificity
	 * with regard to class "outside".
	 * @return
	 */
	public Statistics getRunStatisticsOutside() {
		Statistics s = new Statistics();
		
		for(EvaluationRun run : evaluationRuns)
			for(TestCase t : run.getTestCases())
				s.addStatistics(t.outside);
		
		return s;
	}

	/**
	 * use the {@link Statistics} object generated by this method to calculate recall, precision, specificity
	 * with regard to class "transmembrane".
	 * @return
	 */
	public Statistics getRunStatisticsTMH() {
		Statistics s = new Statistics();
		
		for(EvaluationRun run : evaluationRuns)
			for(TestCase t : run.getTestCases())
				s.addStatistics(t.transmembrane);
		
		return s;
	}
	
}
